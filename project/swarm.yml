version: '3'

services:

  caddy:
    image: mategz/micro-caddy:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "caddy_data:/data"
      - "caddy_config:/config"

  broker-service:
    image: mategz/broker-service:1.0.1
    deploy:
      mode: replicated
      replicas: 1

  listener-service:
    image: mategz/listener-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1

  auth-service:
    image: mategz/auth-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "postgresql://postgres:password@host.docker.internal:5432/users"

  logger-service:
    image: mategz/logger-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1

  mail-service:
    image: mategz/mail-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: none
      MAIL_PASSWORD: ""
      MAIL_USERNAME: ""
      FROM_NAME: "John Smith"
      FROM_ADDRESS: john.smith@example.com

  front-service:
    image: mategz/front-service:1.0.3
    deploy:
      mode: replicated
      replicas: 1
    environment:
      BROKER_URL: "http://backend"

  postgres:
    image: 'postgres:latest'
    ports:
      - "5432:5432"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

  mongo:
    image: 'mongo:4.2.16-bionic'
    ports:
      - "27017:27017"
    deploy:
      mode: global
    environment:
      DSN: "mongodb://mongo:27017"
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo/:/data/db

  mailhog:
    image: 'anatomicjc/mailhog:latest'
    ports:
      - "1025:1025"
      - "8025:8025"
    deploy:
      mode: global

  rabbitmq:
    image: 'rabbitmq:3.9-management-alpine'
    deploy:
      mode: global

volumes:
  caddy_data:
    external: true
  caddy_config: